from functools import lru_cache
from itertools import permutations, combinations, product, accumulate, cycle, chain
from collections import defaultdict,deque, Counter
from bisect import bisect,bisect_left,bisect_right
from math import sqrt,log10,log2,gcd,inf
#from sortedcontainers import SortedList
from heapq import heappush,heapify,heappushpop,heappop,_heapify_max,heapreplace
 
##### ***** Frequently Used Code ***** #######
# list(map(int,input().split()))
# int(input())
for _ in range(int(input())):
    n,m = map(int,input().split())
    arr = list(map(int,input().split()))
    left = arr[1:m]
    right = arr[m:]
    res = 0
    if left:
        sortedArr = []
        summ = 0
        for val in left[::-1]:
            heappush(sortedArr,-val)
            summ+=val
            if summ>0:
                highest = -1*heappop(sortedArr)
                res+=1
                summ-=2*highest
    if right:
        sortedArr = []
        summ = 0
        for val in right:
            heappush(sortedArr,val)
            summ+=val
            if summ<0:
                lowest = heappop(sortedArr)
                res+=1
                summ-=2*lowest
    print(res)